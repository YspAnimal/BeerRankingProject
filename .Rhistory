sort=character(),
order=character(),
min=character(),
max=character(),
retired=character(),
new=character(),
mine=character(),
stringsAsFactors=FALSE)
for (i in 1:nrow(stylesFrame)) {
styleLink <- as.vector(stylesFrame$Link[[10]])
StylePage <- paste0("http://www.ratebeer.com", styleLink)
ScriptTXT <- read_html(StylePage) %>% html_nodes("script")
ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit("[\r\n\t]") %>% unlist
needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
ParDataFrame <- rbind(ParDataFrame, needParVal)
}
View(ParDataFrame)
require(rvest)
require(reshape2)
##Get Beer styles table
GetBeerStylesDataframe <- function (link) {
beer_page <-
read_html(link) # Set WEB-page of beer ranking
beer_Groups <-
html_text(html_nodes(beer_page, ".groupname")) # Get Global beer groups
beer_stylesHTML <-
html_nodes(beer_page, ".styleGroup") # Get beer styles nodes
beer_stylesHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "li")
}) # Prepare to transform to list
beer_styles <-
lapply(beer_stylesHTML, html_text) # Get list of beer styles
names(beer_styles) <- beer_Groups # Rename beer styles list
beer_styles <- melt(beer_styles) # melt list to data frame
beer_linksHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "a")
}) # extract information about links
beer_links <-
lapply(beer_linksHTML, function(x) {
html_attr(x, "href")
}) # Get beer styles links to own web page
beer_links <- unlist(beer_links) # Unlist it to vector
beer_styles <-
cbind(beer_styles, beer_links) # Create one data set, thet contains information about all of characteristic of beer
names(beer_styles) <-
c("Style", "Type", "Link") # Rename columns in dataset
return(beer_styles)
}
####Try to aggregate full information about beer styles in one dataFrame
##Get beers list from style link
stylesFrame <- GetBeerStylesDataframe("http://www.ratebeer.com/beerstyles")
ParDataFrame <- data.frame(style=character(),
sort=character(),
order=character(),
min=character(),
max=character(),
retired=character(),
new=character(),
mine=character(),
stringsAsFactors=FALSE)
parlist <- list()
for (i in 1:nrow(stylesFrame)) {
styleLink <- as.vector(stylesFrame$Link[[10]])
StylePage <- paste0("http://www.ratebeer.com", styleLink)
ScriptTXT <- read_html(StylePage) %>% html_nodes("script")
ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit("[\r\n\t]") %>% unlist
needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
parlist[[i]] <- needParVal
}
parlist <- list()
for (i in 1:nrow(stylesFrame)) {
styleLink <- as.vector(stylesFrame$Link[[i]])
StylePage <- paste0("http://www.ratebeer.com", styleLink)
ScriptTXT <- read_html(StylePage) %>% html_nodes("script")
ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit("[\r\n\t]") %>% unlist
needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
parlist[[i]] <- needParVal
}
stylesFrame <- cbind(stylesFrame, parlist)
stylesFrame <- rbind(stylesFrame, parlist)
View(stylesFrame)
do.call(rbind, parlist)
parlist <- do.call(rbind, parlist)
View(parlist)
stylesFrame <- GetBeerStylesDataframe("http://www.ratebeer.com/beerstyles")
stylesFrame <- cbind(stylesFrame, parlist)
View(stylesFrame)
require(rvest)
require(reshape2)
##Get Beer styles table
GetBeerStylesDataframe <- function (link) {
beer_page <-
read_html(link) # Set WEB-page of beer ranking
beer_Groups <-
html_text(html_nodes(beer_page, ".groupname")) # Get Global beer groups
beer_stylesHTML <-
html_nodes(beer_page, ".styleGroup") # Get beer styles nodes
beer_stylesHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "li")
}) # Prepare to transform to list
beer_styles <-
lapply(beer_stylesHTML, html_text) # Get list of beer styles
names(beer_styles) <- beer_Groups # Rename beer styles list
beer_styles <- melt(beer_styles) # melt list to data frame
beer_linksHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "a")
}) # extract information about links
beer_links <-
lapply(beer_linksHTML, function(x) {
html_attr(x, "href")
}) # Get beer styles links to own web page
beer_links <- unlist(beer_links) # Unlist it to vector
beer_styles <-
cbind(beer_styles, beer_links) # Create one data set, thet contains information about all of characteristic of beer
names(beer_styles) <-
c("Style", "Type", "Link") # Rename columns in dataset
return(beer_styles)
}
####Try to aggregate full information about beer styles in one dataFrame
##Get beers list from style link
stylesFrame <- GetBeerStylesDataframe("http://www.ratebeer.com/beerstyles")
ParDataFrame <- data.frame(style=character(),
sort=character(),
order=character(),
min=character(),
max=character(),
retired=character(),
new=character(),
mine=character(),
stringsAsFactors=FALSE)
parlist <- list()
for (i in 1:nrow(stylesFrame)) {
styleLink <- as.vector(stylesFrame$Link[[i]])
StylePage <- paste0("http://www.ratebeer.com", styleLink)
ScriptTXT <- read_html(StylePage) %>% html_nodes("script")
ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit("[\r\n\t]") %>% unlist
needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
parlist[[i]] <- needParVal
}
parlist <- do.call(rbind, parlist)
stylesFrame <- cbind(stylesFrame, parlist)
install.packages("rmongodb")
View(stylesFrame)
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
needParNames <- gsub('([[:punct:]]*)([[:blank:]]*)', "", needPar)
needParNames <- gsub('[[:digit:]]*', "", needParNames)
names(beer_styles) <- paste(c("Style", "Type", "Link"), needParNames) # Rename columns in dataset
names(stylesFrame) <- paste(c("Style", "Type", "Link"), needParNames) # Rename columns in dataset
View(stylesFrame)
names(stylesFrame) <- paste0(c("Style", "Type", "Link"), needParNames) # Rename columns in dataset
View(stylesFrame)
c("Style", "Type", "Link", needParNames)
names(stylesFrame) <- paste0(c("Style", "Type", "Link", needParNames)) # Rename columns in dataset
View(stylesFrame)
names(stylesFrame) <- c("Style", "Type", "Link", needParNames)
View(stylesFrame)
install.packages("sqldf")
install.packages("XLConnect")
stylesFrame[1]
stylesFrame[[1]]
stylesFrame[1, ]
stylesFrame[1, ]$Link
ResultURL <- paste0("http://www.ratebeer.com", stylesFrame[1, ]$Link, "/ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
ResultURL <- paste0("http://www.ratebeer.com", stylesFrame[1, ]$Link, "/ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max,
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
ResultURL
ResultURL <- paste0("http://www.ratebeer.com", stylesFrame[1, ]$Link, "ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max,
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
ResultURL <- paste0("http://www.ratebeer.com", stylesFrame[1, ]$Link, "ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max,
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
ResultURL
beerTableHTML <- read_html(ResultURL)
beerTableHTML
beerTableHTML <- read_html(ResultURL) %>% html_nodes(".table-hover")
beerTableHTML
beerTableHTML <- read_html(ResultURL) %>% html_nodes(".text-center , a")
beerTableHTML <- read_html(ResultURL) %>% html_nodes(".text-center , a")
html_text(beerTableHTML)
ResultURL
beer_styles <- melt(beer_styles) # melt list to data frame
read_html(ResultURL)
beerTableHTML <- read_html(ResultURL) %>% html_nodes(".text-center , a")
beerTableHTML
ResultURL
ResultURL <- paste0("http://www.ratebeer.com", "ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max,
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
ResultURL
ResultURL <- paste0("http://www.ratebeer.com", "/ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max,
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
ResultURL
beerTableHTML <- read_html(ResultURL) %>% html_nodes(".text-center , a")
beerTableHTML
html_text(beerTableHTML)
html_table(beerTableHTML)
read_html(ResultURL) %>% html_nodes(".text-center , a")
read_html(ResultURL) %>% html_nodes("td")
beerTableHTML <- read_html(ResultURL) %>% html_nodes("td")
html_table(beerTableHTML)
library(XML)
readHTMLTable(ResultURL, which=1)
str(readHTMLTable(ResultURL, which=1))
beerLinksHTML <- read_html(ResultURL) %>% html_nodes("a") %>% html_text()
beerLinksHTML <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable <- readHTMLTable(ResultURL)
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)
beerTable
str(beerTable)
beerTable
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
View(beerTable)
as.data.frame(readHTMLTable(ResultURL, as.data.frame = TRUE))
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable <- rbind(beerTable, beerLinks)
View(beerTable)
beerLinks
beerTable
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable <- cbind(beerTable, beerLinks)
View(beerTable)
library(sqldf)
db <- dbConnect(SQLite(), dbname=”BeerDB.sqlite”)
db <- dbConnect(SQLite(), dbname="BeerDB.sqlite")
beerTable <- cbind(beerTable[, 2:6], beerLinks)
View(beerTable)
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable <- cbind(beerTable[, 2:6], beerLinks)
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
View(beerTable)
beerTable <- cbind(beerTable[, 2:5], beerLinks)
View(beerTable)
dbWriteTable(conn = db, name = “Styles”, value = stylesFrame, row.names = FALSE)
dbWriteTable(conn = db, name = “Beers”, value = beerTable, row.names = FALSE)
dbWriteTable(conn = db, name = "Styles", value = stylesFrame, row.names = FALSE)
dbWriteTable(conn = db, name = "Beers", value = beerTable, row.names = FALSE)
names(stylesFrame) <- c("BeerStyle", "Type", "Link", needParNames) # Rename columns in dataset
View(stylesFrame)
dbWriteTable(conn = db, name = "Styles", value = stylesFrame, row.names = FALSE)
dbWriteTable(conn = db, name = "Beers", value = beerTable, row.names = FALSE)
dbListFields(db, "Styles")
dbReadTable(db, "Styles")
dbReadTable(db, "Beers")
beerTable <- cbind(beerTable[, 2:5], beerLinks,stylesFrame[1, ]$style)
View(beerTable)
View(stylesFrame)
View(beerTable)
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable[, 1] <- stylesFrame[1, ]$style
beerTable <- cbind(beerTable[, 2:5], beerLinks)
View(beerTable)
View(beerTable)
stylesFrame[1, ]$style
beerTable[, 1]
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
View(beerTable)
View(beerTable)
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
View(beerTable)
beerTable[, 1] <- stylesFrame[1, ]$style
View(beerTable)
names(beerTable[, 1]) <- c("style")
View(beerTable)
names(beerTable) <- c("Style", "Name", "Count", "ABV", "Score")
View(beerTable)
View(stylesFrame)
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable[, 1] <- stylesFrame[1, ]$style
beerTable <- cbind(beerTable[, 1:5], beerLinks)
names(beerTable) <- c("style", "Name", "Count", "ABV", "Score")
###Write dataframes to SQLite database
db <- dbConnect(SQLite(), dbname="BeerDB.sqlite")
dbWriteTable(conn = db, name = "Styles", value = stylesFrame, row.names = FALSE)
dbWriteTable(conn = db, name = "Beers", value = beerTable, row.names = FALSE)
dbDisconnect(db)
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable[, 1] <- stylesFrame[1, ]$style
beerTable <- cbind(beerTable[, 1:5], beerLinks)
names(beerTable) <- c("style", "Name", "Count", "ABV", "Score")
###Write dataframes to SQLite database
db <- dbConnect(SQLite(), dbname="BeerDB.sqlite")
dbWriteTable(conn = db, name = "Styles", value = stylesFrame, row.names = FALSE)
dbWriteTable(conn = db, name = "Beers", value = beerTable, row.names = FALSE)
#dbWriteTable(conn = db, name = “Votes”, value = School, row.names = FALSE)
dbDisconnect(db)
require(rvest)
require(reshape2)
##Get Beer styles table
GetBeerStylesDataframe <- function (link) {
beer_page <-
read_html(link) # Set WEB-page of beer ranking
beer_Groups <-
html_text(html_nodes(beer_page, ".groupname")) # Get Global beer groups
beer_stylesHTML <-
html_nodes(beer_page, ".styleGroup") # Get beer styles nodes
beer_stylesHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "li")
}) # Prepare to transform to list
beer_styles <-
lapply(beer_stylesHTML, html_text) # Get list of beer styles
names(beer_styles) <- beer_Groups # Rename beer styles list
beer_styles <- melt(beer_styles) # melt list to data frame
beer_linksHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "a")
}) # extract information about links
beer_links <-
lapply(beer_linksHTML, function(x) {
html_attr(x, "href")
}) # Get beer styles links to own web page
beer_links <- unlist(beer_links) # Unlist it to vector
beer_styles <-
cbind(beer_styles, beer_links) # Create one data set, thet contains information about all of characteristic of beer
return(beer_styles)
}
####Try to aggregate full information about beer styles in one dataFrame
##Get beers list from style link
stylesFrame <- GetBeerStylesDataframe("http://www.ratebeer.com/beerstyles")
ParDataFrame <- data.frame(style=character(),
sort=character(),
order=character(),
min=character(),
max=character(),
retired=character(),
new=character(),
mine=character(),
stringsAsFactors=FALSE)
parlist <- list()
for (i in 1:nrow(stylesFrame)) {
styleLink <- as.vector(stylesFrame$Link[[i]])
StylePage <- paste0("http://www.ratebeer.com", styleLink)
ScriptTXT <- read_html(StylePage) %>% html_nodes("script")
ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit("[\r\n\t]") %>% unlist
needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
parlist[[i]] <- needParVal
}
parlist <- do.call(rbind, parlist)
stylesFrame <- cbind(stylesFrame, parlist)
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
needParNames <- gsub('([[:punct:]]*)([[:blank:]]*)', "", needPar)
needParNames <- gsub('[[:digit:]]*', "", needParNames)
names(stylesFrame) <- c("BeerStyle", "Type", "Link", needParNames) # Rename columns in dataset
####Try to scrap beer information table.
ResultURL <- paste0("http://www.ratebeer.com", "/ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max,
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
library(XML)
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable[, 1] <- stylesFrame[1, ]$style
beerTable <- cbind(beerTable[, 1:5], beerLinks)
names(beerTable) <- c("style", "Name", "Count", "ABV", "Score")
###Write dataframes to SQLite database
db <- dbConnect(SQLite(), dbname="BeerDB.sqlite")
dbWriteTable(conn = db, name = "Styles", value = stylesFrame, row.names = FALSE)
dbWriteTable(conn = db, name = "Beers", value = beerTable, row.names = FALSE)
#dbWriteTable(conn = db, name = “Votes”, value = School, row.names = FALSE)
dbDisconnect(db)
readHTMLTable(ResultURL, as.data.frame = TRUE)
ResultURL <- paste0("http://www.ratebeer.com", "/ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max,
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
ResultURL
View(ParDataFrame)
View(stylesFrame)
GetBeerStylesDataframe <- function (link) {
beer_page <-
read_html(link) # Set WEB-page of beer ranking
beer_Groups <-
html_text(html_nodes(beer_page, ".groupname")) # Get Global beer groups
beer_stylesHTML <-
html_nodes(beer_page, ".styleGroup") # Get beer styles nodes
beer_stylesHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "li")
}) # Prepare to transform to list
beer_styles <-
lapply(beer_stylesHTML, html_text) # Get list of beer styles
names(beer_styles) <- beer_Groups # Rename beer styles list
beer_styles <- melt(beer_styles) # melt list to data frame
beer_linksHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "a")
}) # extract information about links
beer_links <-
lapply(beer_linksHTML, function(x) {
html_attr(x, "href")
}) # Get beer styles links to own web page
beer_links <- unlist(beer_links) # Unlist it to vector
beer_styles <-
cbind(beer_styles, beer_links) # Create one data set, thet contains information about all of characteristic of beer
return(beer_styles)
}
stylesFrame <- GetBeerStylesDataframe("http://www.ratebeer.com/beerstyles")
ParDataFrame <- data.frame(style=character(),
sort=character(),
order=character(),
min=character(),
max=character(),
retired=character(),
new=character(),
mine=character(),
stringsAsFactors=FALSE)
View(stylesFrame)
parlist <- list()
for (i in 1:nrow(stylesFrame)) {
styleLink <- as.vector(stylesFrame$Link[[i]])
StylePage <- paste0("http://www.ratebeer.com", styleLink)
ScriptTXT <- read_html(StylePage) %>% html_nodes("script")
ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit("[\r\n\t]") %>% unlist
needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
parlist[[i]] <- needParVal
}
GetBeerStylesDataframe <- function (link) {
beer_page <-
read_html(link) # Set WEB-page of beer ranking
beer_Groups <-
html_text(html_nodes(beer_page, ".groupname")) # Get Global beer groups
beer_stylesHTML <-
html_nodes(beer_page, ".styleGroup") # Get beer styles nodes
beer_stylesHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "li")
}) # Prepare to transform to list
beer_styles <-
lapply(beer_stylesHTML, html_text) # Get list of beer styles
names(beer_styles) <- beer_Groups # Rename beer styles list
beer_styles <- melt(beer_styles) # melt list to data frame
beer_linksHTML <-
lapply(beer_stylesHTML, function(x) {
html_nodes(x, "a")
}) # extract information about links
beer_links <-
lapply(beer_linksHTML, function(x) {
html_attr(x, "href")
}) # Get beer styles links to own web page
beer_links <- unlist(beer_links) # Unlist it to vector
beer_styles <-
cbind(beer_styles, beer_links) # Create one data set, thet contains information about all of characteristic of beer
return(beer_styles)
}
stylesFrame <- GetBeerStylesDataframe("http://www.ratebeer.com/beerstyles")
ParDataFrame <- data.frame(style=character(),
sort=character(),
order=character(),
min=character(),
max=character(),
retired=character(),
new=character(),
mine=character(),
stringsAsFactors=FALSE)
parlist <- list()
styleLink <- as.vector(stylesFrame$Link[[1]])
View(stylesFrame)
styleLink <- as.vector(stylesFrame$beer_links[[1]])
for (i in 1:nrow(stylesFrame)) {
styleLink <- as.vector(stylesFrame$beer_links[[i]])
StylePage <- paste0("http://www.ratebeer.com", styleLink)
ScriptTXT <- read_html(StylePage) %>% html_nodes("script")
ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit("[\r\n\t]") %>% unlist
needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
parlist[[i]] <- needParVal
}
parlist <- do.call(rbind, parlist)
stylesFrame <- cbind(stylesFrame, parlist)
needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', "", needPar)
needParNames <- gsub('([[:punct:]]*)([[:blank:]]*)', "", needPar)
needParNames <- gsub('[[:digit:]]*', "", needParNames)
names(stylesFrame) <- c("BeerStyle", "Type", "Link", needParNames) # Rename columns in dataset
####Try to scrap beer information table.
ResultURL <- paste0("http://www.ratebeer.com", "/ajax/top-beer-by-style.asp?", "style=", stylesFrame[1, ]$style,
"&sort=", stylesFrame[1, ]$sort, "&order=", stylesFrame[1, ]$order, "&min=", stylesFrame[1, ]$min, "&max=", stylesFrame[1, ]$max,
"&retired=", stylesFrame[1, ]$retired, "&new=", stylesFrame[1, ]$new, "&mine=", stylesFrame[1, ]$mine)
library(XML)
beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]
beerLinks <- read_html(ResultURL) %>% html_nodes("a") %>% html_attr("href")
beerTable[, 1] <- stylesFrame[1, ]$style
beerTable <- cbind(beerTable[, 1:5], beerLinks)
names(beerTable) <- c("style", "Name", "Count", "ABV", "Score")
###Write dataframes to SQLite database
db <- dbConnect(SQLite(), dbname="BeerDB.sqlite")
dbWriteTable(conn = db, name = "Styles", value = stylesFrame, row.names = FALSE)
dbWriteTable(conn = db, name = "Beers", value = beerTable, row.names = FALSE)
#dbWriteTable(conn = db, name = “Votes”, value = School, row.names = FALSE)
dbDisconnect(db)
db <- dbConnect(SQLite(), dbname="BeerDB.sqlite")
dbWriteTable(conn = db, name = "Styles", value = stylesFrame, row.names = FALSE)
dbWriteTable(conn = db, name = "Beers", value = beerTable, row.names = FALSE)
