{
    "collab_server" : "",
    "contents" : "require(rvest)\nrequire(reshape2)\nrequire(stringr)\nrequire(plyr)\nrequire(sqldf)\nrequire(data.table)\nrequire(parallel)\noptions(stringsAsFactors = FALSE)\n\n##Get Beer styles table\nGetBeerStylesDataframe <- function (link) {\n        beer_page <-\n                read_html(link) # Set WEB-page of beer ranking\n        beer_Groups <-\n                html_text(html_nodes(beer_page, \".groupname\")) # Get Global beer groups\n        beer_stylesHTML <-\n                html_nodes(beer_page, \".styleGroup\") # Get beer styles nodes\n        beer_stylesHTML <-\n                lapply(beer_stylesHTML, function(x) {\n                        html_nodes(x, \"li\")\n                }) # Prepare to transform to list\n        beer_styles <-\n                lapply(beer_stylesHTML, html_text) # Get list of beer styles\n        names(beer_styles) <- beer_Groups # Rename beer styles list\n        beer_styles <- melt(beer_styles) # melt list to data frame\n        beer_linksHTML <-\n                lapply(beer_stylesHTML, function(x) {\n                        html_nodes(x, \"a\")\n                }) # extract information about links\n        beer_links <-\n                lapply(beer_linksHTML, function(x) {\n                        html_attr(x, \"href\")\n                }) # Get beer styles links to own web page\n        beer_links <- unlist(beer_links) # Unlist it to vector\n        beer_styles <-\n                cbind(beer_styles, beer_links) # Create one data set, thet contains information about all of characteristic of beer\n        return(beer_styles)\n}\n\n\n####Try to aggregate full information about beer styles in one dataFrame\n\n##Get beers list from style link\nstylesFrame <- GetBeerStylesDataframe(\"http://www.ratebeer.com/beerstyles\")\nparlist <- list()\nfor (i in 1:nrow(stylesFrame)) {\n        styleLink <- as.vector(stylesFrame$beer_links[[i]])\n        StylePage <- paste0(\"http://www.ratebeer.com\", styleLink)\n        ScriptTXT <- read_html(StylePage) %>% html_nodes(\"script\")\n        ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit(\"[\\r\\n\\t]\") %>% unlist\n        needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]\n        needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', \"\", needPar)\n        parlist[[i]] <- needParVal\n}\nparlist <- do.call(rbind, parlist)\nstylesFrame <- cbind(stylesFrame, parlist, stringsAsFactors = FALSE)\nneedParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', \"\", needPar)\nneedParNames <- gsub('([[:punct:]]*)([[:blank:]]*)', \"\", needPar)\nneedParNames <- gsub('[[:digit:]]*', \"\", needParNames)\nnames(stylesFrame) <- c(\"BeerStyle\", \"Type\", \"Link\", needParNames) # Rename columns in dataset\n\n\n####Try to scrap beer information table.\n###Add a new column \"JSLink\" to be used for create beers table\nstylesFrame <- mutate(stylesFrame, JSlink = paste0(\"http://www.ratebeer.com\", \"/ajax/top-beer-by-style.asp?\", \"style=\", style,\n                                    \"&sort=\", sort, \"&order=\", order, \"&min=\", min, \"&max=\", max,\n                                    \"&retired=\", retired, \"&new=\", new, \"&mine=\", mine))\nmakeBeerDF <- function(LinkList){\n        d <- lapply(LinkList, function(i){\n                table <- readHTMLTable(i, as.data.frame = TRUE)[[1]]\n                links <- read_html(i) %>% html_nodes(\"a\") %>% html_attr(\"href\")\n                table[, 1] <- str_extract(i, \"\\\\d+\")\n                links <- paste0(\"http://www.ratebeer.com\", links)\n                table <- cbind(table, links, stringsAsFactors = FALSE)\n        } )\n        rbindlist(d)\n        #do.call(rbind, d)\n        #as.data.frame(d)\n        #names(d) <- c(\"style\", \"Name\", \"Count\", \"ABV\", \"Score\", \"BeerLink\")\n        #return(d)\n}\nbeerTable <- makeBeerDF(stylesFrame$JSlink)\nnames(beerTable) <- c(\"style\", \"Name\", \"Count\", \"ABV\", \"Score\", \"BeerLink\")\n\n\n####Try to scrap General information and description about beers.\nmakeBeerGeneralInformationDF <- function(BeerLink) {\n        d <- lapply(BeerLink, function(i){\n                URL <- paste0(\"http://www.ratebeer.com\", i)\n                #Info <- read_html(URL)\n                Info <- read_html(URL) %>%\n                        html_nodes(\"#container table+ div:nth-child(2) , #_brand4 span , #_aggregateRating6 span , #_description3\") %>%\n                        html_text()\n                Info <- append(Info[c(2,4,5)], URL)\n        })\n        do.call(rbind, d)\n        as.data.frame(d)\n        names(d) <- c(\"Overall\", \"Brewed\", \"Description\", \"BeerLink\")\n        return(d)\n}\nBeerGeneralInformation <- makeBeerGeneralInformationDF(beerTable$BeerLink)\n\n\n##Try to scrap beer reviews\nmakeBeerReviewsDF <- function(BeerLink) {\n        d <- mclapply(BeerLink, function(Link){\n                PageNumber <-read_html(Link) %>% html_nodes(\"b.ballno+ .ballno\") %>% html_text() #Scrap max page namber for selected beer\n                InfoV <- c()\n                if (!is.na(PageNumber)) {\n                        if (as.numeric(PageNumber)>2) {\n                                for (i in c(1:as.numeric(PageNumber))) {\n                                        URL <- paste0(Link, \"1/\", i,\"/\")\n                                        Info <- read_html(URL) %>% html_nodes(\"#container div br+ div\") %>% html_text() #Scrap all comment at page\n                                        #Info <- Info[1:(length(Info)-2)]\n                                        InfoV <- append(InfoV, Info)\n                                        print(c(Link, PageNumber, i))\n                                }\n                        }        \n                }\n                do.call(cbind, list(InfoV, Link))\n        })\n        #do.call(rbind, d)\n        #as.data.frame(d)\n        #names(d) <- c(\"Overall\", \"Brewed\", \"Description\", \"BeerLink\")\n        #do.call(rbind, lapply(d, unlist))\n        return(d)\n}\n\nBeerReviews <- makeBeerReviewsDF(BeerGeneralInformation$BeerLink)\n\nTest <- makeBeerReviewsDF(\"http://www.ratebeer.com/beer/t-ij-natte/6057/\")\n\n\nPageNumber <-read_html(\"http://www.ratebeer.com/beer/t-ij-natte/6057/\") %>% html_nodes(\"b.ballno+ .ballno\") %>% html_text() #Scrap max page namber for selected beer\nInfoV <- c()\nif ((!is.na(PageNumber))&(PageNumber>2)) {\n        for (i in c(2:PageNumber)) {\n                URL <- paste0(\"http://www.ratebeer.com/beer/la-choulette-de-noel/23326/\", \"1/\", i,\"/\")\n                Info <- read_html(URL) %>% html_nodes(\"#container div br+ div\") %>% html_text() #Scrap all comment at page\n                #Info <- Info[1:(length(Info)-2)]\n                InfoV <- append(InfoV, Info)\n                print(c(\"http://www.ratebeer.com/beer/la-choulette-de-noel/23326/\", PageNumber, i))\n        }        \n}\n\n\n\n\n\n\n\n\n###Read dataframe fro SQLite database to enviroment\ndb <- dbConnect(SQLite(), dbname=\"BeerDB.sqlite\")\nstylesFrame <- dbReadTable(db, \"Styles\")\nbeerTable <- dbReadTable(db, \"Beers\")\nBeerGeneralInformation <- dbReadTable(db, \"GeneralInfo\")\ndbDisconnect(db)\n\n\n\n###Write dataframes to SQLite database\ndb <- dbConnect(SQLite(), dbname=\"BeerDB.sqlite\")\ndbWriteTable(conn = db, name = \"Styles\", value = stylesFrame, row.names = FALSE, overwrite = TRUE)\ndbWriteTable(conn = db, name = \"Beers\", value = beerTable, row.names = FALSE, overwrite = TRUE)\ndbWriteTable(conn = db, name = \"GeneralInfo\", value = as.data.frame(BeerGeneralInformation), row.names = FALSE, overwrite = TRUE)\n\n\ndbReadTable(db, \"Styles\")\nstr(dbReadTable(db, \"Beers\"))\nBeerGeneralInformation <- dbReadTable(db, \"GeneralInfo\")\n\ndbDisconnect(db)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#test scrap comments!!!!!\n# BeerGeneralInformation$BeerLink[1]\n#         URL <- BeerGeneralInformation$BeerLink[1]\n#         PageNumber <-read_html(URL) %>% html_nodes(\"b.ballno+ .ballno\") %>% html_text() #Scrap max page namber for selected beer\n#         for (i in c(2:3)) {\n#                 URLf <- paste0(URL, \"1/\", i,\"/\")\n#                 Info <- read_html(URLf) %>% html_nodes(\"#container div br+ div\") %>% html_text() #Scrap all comment at page\n#                 Info <- Info[1:(length(Info)-2)]\n#                 Info <- append(Info, Info)\n#         }        \n# t <- cbind(Info, URL)\n#         \n#         \n#         \n#         Infot <- read_html(URL) %>%\n#                 html_nodes(\"#container div br+ div\") %>%\n#                 html_text()     \n\n\n\n\n# d <- lapply(BeerGeneralInformation$BeerLink[1:2], function(Link){\n#         PageNumber <-read_html(Link) %>% html_nodes(\"b.ballno+ .ballno\") %>% html_text() #Scrap max page namber for selected beer\n#         InfoV <- c()\n#         for (i in c(2:PageNumber)) {\n#                 URL <- paste0(Link, \"1/\", i,\"/\")\n#                 Info <- read_html(URL) %>% html_nodes(\"#container div br+ div\") %>% html_text() #Scrap all comment at page\n#                 Info <- Info[1:(length(Info)-2)]\n#                 InfoV <- append(InfoV, Info)\n#                 #do.call(cbind, list(Info))\n#         }        \n#         #Info <- append(Info[c(2,4,5)], URL)\n#         do.call(cbind, list(InfoV, Link))\n# })\n# eee <- do.call(rbind, lapply(d, unlist))\n# \n# \n# eee <- bindlist(d)\n# eee <- as.data.frame(d)\n# do.call(rbind, d)\n# \n\n\n\n\n\n\n####Try to scrap user comments and rating scores.\n# ResultURL <- paste0(\"http://www.ratebeer.com\", beerTable[1, ]$BeerLink)\n# beerGeneralInfo <- read_html(ResultURL) %>% html_nodes(\"#container div table:nth-child(8)\") %>% html_text()\n# beerGeneralInfo[, 1] <- stylesFrame[1, ]$style\n# beerGeneralInfo <- cbind(beerGeneralInfo[, 1:5], beerLinks)\n# \n# html_attr(beerGeneralInfo, \"id\")\n# test <- html_text(beerGeneralInfo)\n# \n\n\n#BeerGeneralInformation <- as.data.frame(BeerGeneralInformation)\n#names(BeerGeneralInformation) <- c(\"Overall\", \"Brewed\", \"Description\", \"BeerLink\")\n\n\n## #container div table:nth-child(8)\n\n\n# ResultURL <- paste0(\"http://www.ratebeer.com\", \"/ajax/top-beer-by-style.asp?\", \"style=\", stylesFrame[1, ]$style,\n#                     \"&sort=\", stylesFrame[1, ]$sort, \"&order=\", stylesFrame[1, ]$order, \"&min=\", stylesFrame[1, ]$min, \"&max=\", stylesFrame[1, ]$max,\n#                     \"&retired=\", stylesFrame[1, ]$retired, \"&new=\", stylesFrame[1, ]$new, \"&mine=\", stylesFrame[1, ]$mine)\n# \n# \n# \n# styleLink <- as.vector(stylesFrame$Link[[1]])\n# StylePage <- paste0(\"http://www.ratebeer.com\", styleLink)\n# \n# #GetBeersTable\n# ScriptTXT <- read_html(StylePage) %>% html_nodes(\"script\")\n# ScriptTXT <- html_text(ScriptTXT[9]) %>% strsplit(\"[\\r\\n\\t]\") %>% unlist\n# needPar <- ScriptTXT[c(6,9,12,15,18,21,24,27)]\n# needParVal <- gsub('([[:punct:]])([[:alpha:]]*)([[:blank:]]*)', \"\", needPar)\n# needParNames <- gsub('([[:punct:]]*)([[:blank:]]*)', \"\", needPar)\n# needParNames <- gsub('[[:digit:]]*', \"\", needParNames)\n# \n# ParDataFrame <- as.data.frame(rbind(needParVal))\n# names(ParDataFrame) <- needParNames\n# \n# \n# \n# \n# #needPar <- cbind(needParNames, needParVal)\n# \n# \n# \n# \n# library(XML)\n# beerTable <- readHTMLTable(ResultURL, as.data.frame = TRUE)[[1]]\n# beerLinks <- read_html(ResultURL) %>% html_nodes(\"a\") %>% html_attr(\"href\")\n# beerTable[, 1] <- stylesFrame[1, ]$style\n# beerTable <- cbind(beerTable[, 1:5], beerLinks)\n\n\n\n\n\n##Test PhantomJS\n# write out a script phantomjs can process\n# library(RSelenium)\n# pJS <- phantom()\n# remDr <- remoteDriver(browserName = \"chrome\")\n# remDr$open()\n# remDr$navigate(StylePage)# process it with phantomjs\n# result <- remDr$phantomExecute(\"var page = http://www.ratebeer.com/beerstyles/abbey-dubbel/71/;\n#                                var fs = require('fs');\n#                                page.onLoadFinished = function(status) {\n#                                var file = fs.open('output.htm', \\\"w\\\");\n#                                file.write(page.content);\n#                                file.close();\n#                                phantom.exit();\n#                                };\")\n# \n\n\n\n\n# str(beer_styles)\n# \n# html_children(beer_stylesHTML[[1]])\n# \n#beer_stylesMatrix <- data.frame(sapply(beer_styles, '[', seq(max(sapply(beer_styles, length)))))\n###!!!Test scrapping\n# beer_stylespage <- read_html(\"http://www.ratebeer.com/beerstyles\")\n# beer_stylesUP <- html_nodes(beer_stylespage, \".groupname\")\n# beer_stylesCustomL <- html_nodes(beer_stylespage, \".styleGroup\")\n# beer_stylesCustom <- html_nodes(beer_stylesCustomL, \"a\")\n# \n# beer_stylesTable <- html_nodes(beer_stylespage, \".col-lg-12 table\")\n# \n# table\n# v <- html_text(beer_stylesCustom)\n# \n# html_text(beer_stylesCustom, trim = TRUE)\n# html_attrs(beer_stylesCustom)[[1]]\n# \n# \n# Ta <- html_table(beer_stylesTable, fill = TRUE)\n# html_table(beer_stylesCustom)\n# str",
    "created" : 1460524276193.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3231267718",
    "id" : "F0C3AD60",
    "lastKnownWriteTime" : 1467268200,
    "last_content_update" : 1467268200253,
    "path" : "C:/R_repositories/OthersData/BeerRankingProject/WebScrapModule.R",
    "project_path" : "WebScrapModule.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}